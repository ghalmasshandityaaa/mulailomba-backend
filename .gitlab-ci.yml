# You can override the included template(s) by including variable overrides
# SAST customization: https://docs.gitlab.com/ee/user/application_security/sast/#customizing-the-sast-settings
# Secret Detection customization: https://docs.gitlab.com/ee/user/application_security/secret_detection/#customizing-settings
# Dependency Scanning customization: https://docs.gitlab.com/ee/user/application_security/dependency_scanning/#customizing-the-dependency-scanning-settings
# Container Scanning customization: https://docs.gitlab.com/ee/user/application_security/container_scanning/#customizing-the-container-scanning-settings
# Note that environment variables can be set in several places
# See https://docs.gitlab.com/ee/ci/variables/#cicd-variable-precedence
stages:
  - test
  - build
  - migration
sast:
  stage: test
include:
  - template: Security/SAST.gitlab-ci.yml
  - template: Security/Dependency-Scanning.gitlab-ci.yml

.migration:show: &migration_show
  stage: migration
  image: node:latest
  script:
    - yarn migration:show

.migration:run: &migration_run
  stage: migration
  image: node:latest
  script:
    - yarn migration:run

.migration-changes: &migration-changes
  changes:
    - libs/database/src/migrations/*
    - libs/database/src/seeds/*

.service-changes: &service-changes
  changes:
    - libs/**/*
    - yarn.lock
    - .gitlab-ci.yml

.dev-config: &dev-config
  environment: development
  rules:
    - if: '$CI_COMMIT_TAG'
      when: never
    - if: '$CI_COMMIT_BRANCH == "development"'
      changes:
        - libs/**/*
        - yarn.lock
        - .gitlab-ci.yml

# .prod-config: &prod-config
#   environment: production
#   rules:
#     - if: '$CI_COMMIT_TAG'
#     - when: manual

build-job:
  stage: build
  image: node:latest
  script:
    - yarn install --frozen-lockfile
    - yarn tsc

# Migration, Dev
migration:show:dev:
  extends: .migration:show
  variables:
    PG_DATABASE_URL: $DEV_PG_DATABASE_URL
    APP_MODE: development
  <<: *dev-config

migration:run:dev:
  extends: .migration:run
  variables:
    PG_DATABASE_URL: $DEV_PG_DATABASE_URL
    APP_MODE: development
  <<: *dev-config
# Migration, Prod
# migration:show:prod:
#   extends: .migration:show
#   variables:
#     PG_DATABASE_URL: $PROD_PG_DATABASE_URL
#     APP_MODE: production
#   <<: *prod-config

# migration:run:prod:
#   extends: .migration:run
#   variables:
#     PG_DATABASE_URL: $PROD_PG_DATABASE_URL
#     APP_MODE: production
#   <<: *prod-config
