stages:
  - build
  - deploy

variables:
  DOCKER_TAG: 'latest'
  DOCKER_REPO: $CI_REGISTRY_IMAGE
  DOCKER_IMAGE: '$DOCKER_REPO:$DOCKER_TAG'

build:
  image: docker:20.10.16
  stage: build
  services:
    - docker:20.10.16-dind
  variables:
    DOCKER_TLS_CERTDIR: '/certs'
  before_script:
    - echo "$CI_REGISTRY_PASSWORD" | docker login -u $CI_REGISTRY_USER --password-stdin $CI_REGISTRY
  script:
    - docker pull "$DOCKER_IMAGE" || true
    - docker build --pull --cache-from "$DOCKER_IMAGE" --cache-from "${DOCKER_REPO}:latest" -t "$DOCKER_IMAGE" ./
    - docker push "$DOCKER_IMAGE"

deploy:
  image: kroniak/ssh-client
  stage: deploy
  before_script:
    - chmod 400 $SSH_PRIVATE_KEY
    # login to gitlab container registry
    - ssh -o StrictHostKeyChecking=no -i $SSH_PRIVATE_KEY $SSH_ADDRESS "
      docker login -u ${CI_DEPLOY_USER} -p ${CI_DEPLOY_PASSWORD} ${CI_REGISTRY}"
  script:
    - echo "Copying files to the remote server..."
    - scp -i $SSH_PRIVATE_KEY -r ./docker-compose.dev.yml $SSH_USER@$SSH_ADDRESS:~/app/mla-backend
    - echo $ENV
    - ssh -o StrictHostKeyChecking=no -i $SSH_PRIVATE_KEY $SSH_ADDRESS "echo \"$ENV\" > ~/app/mla-backend/.env"
    - echo "Stopping and removing existing containers on the remote server..."
    - ssh -o StrictHostKeyChecking=no -i $SSH_PRIVATE_KEY $SSH_ADDRESS "
      docker compose -f ~/app/mla-backend/docker-compose.dev.yml down"
    - echo "Pulling the latest Docker image..."
    - ssh -o StrictHostKeyChecking=no -i $SSH_PRIVATE_KEY $SSH_ADDRESS "
      docker login -u ${CI_DEPLOY_USER} -p ${CI_DEPLOY_PASSWORD} ${CI_REGISTRY} && docker pull ${CI_REGISTRY}/${CI_PROJECT_PATH}:latest"
    - echo "Starting the Docker containers on the remote server..."
    - ssh -o StrictHostKeyChecking=no -i $SSH_PRIVATE_KEY $SSH_ADDRESS "
      docker compose -f ~/app/mla-backend/docker-compose.dev.yml up -d --remove-orphans"
